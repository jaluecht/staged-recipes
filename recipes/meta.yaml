{% set name = "pytesseract" %}
{% set version = "0.2.0" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "35035b0a69a789224d1e981d95453d644c95f8bf869372787f2164b9872d597f" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  entry_points:
    - pytesseract = pytesseract.pytesseract:main
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  host:
    - python
    - setuptools
    - pillow
  run:
    - python
    - pillow

test:
  imports:
    - pytesseract
  commands:
    - pytesseract --help

about:
  home: https://github.com/madmaze/python-tesseract
  license: GPLv3
  license_family: GPL3
  license_file: ''
  summary: Python-tesseract is a python wrapper for Google's Tesseract-OCR
  description: "Python Tesseract\n================\n\nPython-tesseract is an optical character recognition (OCR) tool for python.\nThat is, it will recognize and \"read\" the text embedded in images.\n\n\
    Python-tesseract is a wrapper for `Google's Tesseract-OCR Engine <https://github.com/tesseract-ocr/tesseract>`_. It is also useful as a\nstand-alone invocation script to tesseract, as it can read all\
    \ image types\nsupported by the Python Imaging Library, including jpeg, png, gif, bmp, tiff,\nand others, whereas tesseract-ocr by default only supports tiff and bmp.\nAdditionally, if used as a script,\
    \ Python-tesseract will print the recognized\ntext instead of writing it to a file.\n\nUSAGE\n-----\n\n**Quickstart**\n\n.. code-block:: python\n\n    try:\n        import Image\n    except ImportError:\n\
    \        from PIL import Image\n    import pytesseract\n\n    pytesseract.pytesseract.tesseract_cmd = '<full_path_to_your_tesseract_executable>'\n    # Include the above line, if you don't have tesseract\
    \ executable in your PATH\n    # Example tesseract_cmd: 'C:\\\\Program Files (x86)\\\\Tesseract-OCR\\\\tesseract'\n\n    # Simple image to string\n    print(pytesseract.image_to_string(Image.open('test.png')))\n\
    \    \n    # French text image to string\n    print(pytesseract.image_to_string(Image.open('test-european.jpg'), lang='fra'))\n    \n    # Get bounding box estimates\n    print(pytesseract.image_to_boxes(Image.open('test.png')))\n\
    \    \n    # Get verbose data including boxes, confidences, line and page numbers\n    print(pytesseract.image_to_data(Image.open('test.png')))\n    \nSupport for OpenCV image/NumPy array objects\n\n\
    .. code-block:: python\n\n    import cv2\n\n    img = cv2.imread('/**path_to_image**/digits.png')\n    print(pytesseract.image_to_string(img))\n    # OR explicit beforehand converting\n    print(pytesseract.image_to_string(Image.fromarray(img))\n\
    \nAdd the following config, if you have tessdata error like: \"Error opening data file...\"\n\n.. code-block:: python\n\n    tessdata_dir_config = '--tessdata-dir \"<replace_with_your_tessdata_dir_path>\"\
    '\n    # Example config: '--tessdata-dir \"C:\\\\Program Files (x86)\\\\Tesseract-OCR\\\\tessdata\"'\n    # It's important to add double quotes around the dir path.\n\n    pytesseract.image_to_string(image,\
    \ lang='chi_sim', config=tessdata_dir_config)\n\n\n**Functions**\n\n* **image_to_string** Returns the result of a Tesseract OCR run on the image to string\n\n* **image_to_boxes** Returns result containing\
    \ recognized characters and their box boundaries\n\n* **image_to_data** Returns result containing box boundaries, confidences, and other information. Requires Tesseract 3.05+. For more information,\
    \ please check the `Tesseract TSV documentation <https://github.com/tesseract-ocr/tesseract/wiki/Command-Line-Usage#tsv-output-currently-available-in-305-dev-in-master-branch-on-github>`_\n\n**Parameters**\n\
    \n``image_to_data(image, lang=None, config='', nice=0, output_type=Output.STRING)``\n\n* **image** Object, PIL Image/NumPy array of the image to be processed by Tesseract\n\n* **lang** String, Tesseract\
    \ language code string\n\n* **config** String, Any additional configurations as a string, ex: ``config=\"-psm 6\"``\n\n* **nice** Integer, modifies the processor priority for the Tesseract run. Not\
    \ supported on Windows. Nice adjusts the niceness of unix-like processes.\n\n* **output_type** Class attribute, specifies the type of the output, defaults to ``string``. For the full list of all supported\
    \ types, please check the definition of `pytesseract.Output`_ class.\n\n.. _pytesseract.Output: src/pytesseract.py\n\nINSTALLATION\n------------\n\nPrerequisites:\n\n- Python-tesseract requires python\
    \ 2.5+ or python 3.x\n- You will need the Python Imaging Library (PIL) (or the Pillow fork).\n  Under Debian/Ubuntu, this is the package **python-imaging** or **python3-imaging**.\n- Install `Google\
    \ Tesseract OCR <https://github.com/tesseract-ocr/tesseract>`_ \n  (additional info how to install the engine on Linux, Mac OSX and Windows).\n  You must be able to invoke the tesseract command as *tesseract*.\
    \ If this\n  isn't the case, for example because tesseract isn't in your PATH, you will\n  have to change the \"tesseract_cmd\" variable ``pytesseract.pytesseract.tesseract_cmd``.\n  Under Debian/Ubuntu\
    \ you can use the package **tesseract-ocr**. \n  For Mac OS users. please install homebrew package **tesseract**.\n\n| Installing via pip:\nCheck the `pytesseract package page <https://pypi.python.org/pypi/pytesseract>`_\
    \ for more information.\n\n.. code-block:: bash\n\n    $ (env)> pip install pytesseract\n\n| Or if you have git installed:\n\n.. code-block:: bash\n\n    $ (env)> pip install -U git+https://github.com/madmaze/pytesseract.git\n\
    \n| Installing from source:\n\n.. code-block:: bash\n\n    $> git clone https://github.com/madmaze/pytesseract.git\n    $ (env)> cd pytesseract && pip install -U .\n\nLICENSE\n-------\nPython-tesseract\
    \ is released under the GPL v3.\n\nCONTRIBUTERS\n------------\n- Originally written by `Samuel Hoffstaetter <https://github.com/h>`_\n- `Juarez Bochi <https://github.com/jbochi>`_\n- `Matthias Lee <https://github.com/madmaze>`_\n\
      - `Lars Kistner <https://github.com/Sr4l>`_"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
